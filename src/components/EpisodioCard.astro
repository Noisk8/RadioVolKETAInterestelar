---
interface Cancion {
  titulo: string;
  audioUrl: string;
}

interface Props {
  titulo: string;
  descripcion: string;
  audioUrl: string;
  imagenUrl: string;
  canciones: Cancion[];
}

const { titulo, descripcion, audioUrl, imagenUrl, canciones } = Astro.props;
---

<!-- Actualizar la importación de la fuente para incluir los pesos que necesitamos -->
<link href="https://fonts.googleapis.com/css2?family=Londrina+Solid:wght@100;300;900&display=swap" rel="stylesheet">

<article class="episodio-card">
  <div class="imagen-container">
    <img src={imagenUrl} alt={titulo} />
  </div>
  <div class="contenido">
    <h3>{titulo}</h3>
    <p class="font-family: var(--font-londrina); text-base">{descripcion}</p>
    <audio controls>
      <source src={audioUrl} type="audio/mpeg">
      Tu navegador no soporta el elemento de audio.
    </audio>
    
    <div class="playlist-container">
      <button class="toggle-playlist" aria-expanded="false">
        <span>Ver lista de canciones</span>
        <svg class="icon" width="20" height="20" viewBox="0 0 24 24">
          <path d="M7 10l5 5 5-5H7z" fill="currentColor"/>
        </svg>
      </button>
      
      <div class="playlist">
        <ul class="canciones-lista">
          {canciones.map((cancion: Cancion, index: number) => (
            <li class="cancion-item">
              <span class="numero">{index + 1}</span>
              <span class="cancion-titulo">{cancion.titulo}</span>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</article>

<style>
  .episodio-card {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    margin: 1rem;
    transition: transform 0.2s;
    max-width: 1000px;
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
  }

  .episodio-card:hover {
    transform: translateY(-5px);
  }

  .imagen-container {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .imagen-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .contenido {
    padding: 2rem;
    max-width: 100%;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  h3 {
    margin: 0 0 1rem 0;
    color: #333;
    font-size: 2.2rem;
    font-family: 'Londrina Solid', cursive;
    font-weight: 900;  
    letter-spacing: 0.5px;
  }

  p {
    color: #666;
    margin-bottom: 1.5rem;
    line-height: 1.6;
    font-family: 'Londrina Solid', cursive;
    font-weight: 300;  
    font-size: 1.2rem;
    max-width: 100%;
  }

  audio {
    width: 100%;
    margin-top: 1rem;
  }

  .playlist-container {
    margin-top: 2rem;
    border-top: 1px solid #eee;
    padding-top: 1rem;
    position: relative;
  }

  .toggle-playlist {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 1rem;
    background: #f5f5f5;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    color: #333;
    transition: background-color 0.2s;
    font-family: 'Londrina Solid', cursive;
    font-weight: 300;  
  }

  .toggle-playlist:hover {
    background: #ebebeb;
  }

  .toggle-playlist .icon {
    transition: transform 0.3s ease;
  }

  .toggle-playlist[aria-expanded="true"] .icon {
    transform: rotate(180deg);
  }

  .playlist {
    margin-top: 1rem;
    border: 1px solid #eee;
    border-radius: 8px;
    background: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    display: none;
    z-index: 10;
    width: 100%;
  }

  h4 {
    color: #333;
    font-size: 1.2rem;
    margin-bottom: 1rem;
    font-family: var(--font-londrina);
    font-weight: 400;
  }

  .canciones-lista {
    list-style: none;
    padding: 0;
  }

  .cancion-item {
    display: grid;
    grid-template-columns: 30px 1fr;
    align-items: center;
    padding: 0.8rem;
    border-bottom: 1px solid #eee;
    gap: 1rem;
  }

  .cancion-item:hover {
    background-color: #f5f5f5;
  }

  .numero {
    color: #666;
    font-family: 'Londrina Solid', cursive;
    font-weight: 300;
    text-align: center;
  }

  .cancion-titulo {
    color: #333;
    font-family: 'Londrina Solid', cursive;
    font-weight: 300;
    font-size: 1.1rem;
  }
</style>

<script>
  // Implementación mejorada con comprobaciones de tipo
  document.addEventListener('DOMContentLoaded', () => {
    // Seleccionar todos los botones de toggle
    const toggleButtons = document.querySelectorAll('.toggle-playlist');
    
    toggleButtons.forEach((button) => {
      if (button instanceof HTMLElement) {
        // Encontrar la playlist asociada a este botón
        const playlistContainer = button.closest('.playlist-container');
        if (playlistContainer) {
          const playlist = playlistContainer.querySelector('.playlist');
          
          // Ocultar todas las playlists inicialmente (con verificación de tipo)
          if (playlist instanceof HTMLElement) {
            playlist.style.display = 'none';
            
            // Añadir evento de clic al botón
            button.addEventListener('click', () => {
              // Comprobar si está expandido o colapsado
              const isExpanded = button.getAttribute('aria-expanded') === 'true';
              
              // Alternar visibilidad
              if (isExpanded) {
                playlist.style.display = 'none';
                button.setAttribute('aria-expanded', 'false');
                const buttonText = button.querySelector('span');
                if (buttonText) {
                  buttonText.textContent = 'Ver lista de canciones';
                }
              } else {
                playlist.style.display = 'block';
                button.setAttribute('aria-expanded', 'true');
                const buttonText = button.querySelector('span');
                if (buttonText) {
                  buttonText.textContent = 'Ocultar lista de canciones';
                }
              }
            });
          }
        }
      }
    });
  });
</script>