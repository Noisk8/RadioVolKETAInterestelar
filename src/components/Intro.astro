---
type Episodio = {
  listeners: string;
  broadcastCode: string;
  yp_currently_playing: string;
  title: string;
};

let episodios: Episodio[] = [];

async function fetchData() {
  const datos = await fetch('https://dev.p-node.org/api/v1/streams_list/?search');
  const data = await datos.json();
  console.log('Respuesta de API:', data);
  episodios = Array.isArray(data) ? [data[0]] : data?.items ? [data.items[0]] : [];
}

await fetchData();
---

<div class="flex flex-col items-center justify-center min-h-screen p-4">
  <div class="w-full max-w-md mx-auto mb-8 text-center"> 
    <h1 class="text-2xl font-bold mb-4 dark:text-white text-gray-800">
      Escuchar Radio Volketa Interestelar
    </h1>
    <audio 
      src="https://stream.p-node.org/contretemps.mp3" 
      controls
      autoplay 
      class="w-full rounded-lg shadow-md"
    ></audio>
  </div>
 
  <section class="w-full max-w-md mx-auto" id="datos-stream">
    {episodios.map((episodio) => (
      <div class="p-6 rounded-lg shadow-lg mb-4 hover:shadow-xl transition-shadow dark:bg-gray-800 bg-gray-100">
        {/* <h2 class="text-xl font-bold mb-4 dark:text-white text-gray-800">CANCIÓN: {episodio.title}</h2>
        <div class="space-y-3">
          <p class="dark:text-gray-300 text-gray-700">Oyentes: {episodio.listeners}</p>
        </div> */}
      </div>
    ))}
  </section>
</div>

<client:load>
  <script type="module">
    let episodios = [];

    async function fetchData() {
      try {
        const response = await fetch('https://dev.p-node.org/api/v1/streams_list/?search');
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        const data = await response.json();
        console.log('Respuesta de API:', data);
        episodios = Array.isArray(data) ? [data[0]] : data?.items ? [data.items[0]] : [];
        updateUI();
      } catch (error) {
        console.error('Fetch error:', error);
      }
    }

    function updateUI() {
      console.log('Ejecutando updateUI');
      const section = document.getElementById('datos-stream');
      if (section) {
        section.innerHTML = episodios.map((episodio) => `
          <div>
            <h2>CANCIÓN: ${episodio.title}</h2>
            <p>Número: ${episodio.yp_currently_playing}</p>
            <p>Oyentes: ${episodio.listeners}</p>
            <p>Código de transmisión: ${episodio.broadcastCode}</p>
          </div>
        `).join('');
      }
    }

    fetchData();
    setInterval(fetchData, 30000);
  </script>
</client:load>