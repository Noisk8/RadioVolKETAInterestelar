@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
    Tailwind colors listed here: https://tailwindcss.com/docs/customizing-colors
    
    Why colors are written in rgb format (255 255 255) instead of hex (#ffffff)
    https://tailwindcss.com/docs/customizing-colors#using-css-variables 
*/
@layer base {

    /* light theme */
    .theme-bubblegum {
        --color-primary-yellow: 255 204 45;
        --color-primary-pink: 241 171 190;
        --color-primary-blue: 142 186 255;

        --color-text-body: 31 29 25;
        --color-text-heading: 17 16 13;
        --color-text-bold: 17 16 13;
        --color-text-muted: 108 102 88;
        --color-text-link: 31 29 25;
        --color-text-selection: 17 16 13;
        --color-text-code: 31 29 25;

        --color-bg-body: 248 245 232;
        --color-bg-elevated: 252 249 240;
        --color-bg-card: 255 255 255;
        --color-bg-selection: 255 221 148;
        --color-bg-code: 251 245 209;

        --color-border-ink: 31 29 25;
        --color-border-code: 31 29 25;
        --shadow-soft: 27 24 20;
    }

    /* dark theme */
    .theme-bubblegum.dark {
        --color-primary-yellow: 249 192 47;
        --color-primary-pink: 236 160 181;
        --color-primary-blue: 149 200 255;

        --color-text-body: 244 240 222;
        --color-text-heading: 255 253 245;
        --color-text-bold: 255 253 245;
        --color-text-muted: 198 190 168;
        --color-text-link: 255 253 245;
        --color-text-selection: 255 253 245;
        --color-text-code: 255 253 245;

        --color-bg-body: 18 17 14;
        --color-bg-elevated: 26 24 21;
        --color-bg-card: 33 30 27;
        --color-bg-selection: 104 82 20;
        --color-bg-code: 43 37 32;

        --color-border-ink: 255 253 245;
        --color-border-code: 104 82 20;
        --shadow-soft: 0 0 0;
    }

    :root {
        font-family: theme('fontFamily.body');
        background-color: theme('colors.bg.body');
        color: theme('colors.text.body');
        font-size: 1.05em;
        line-height: 1.8;
        scroll-behavior: smooth;
        letter-spacing: 0.01em;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: theme('fontFamily.heading');
    }
}

@layer components {

    /* ------ GLOBAL STYLES - START ------ */
    strong {
        font-weight: 600;
        color: theme('colors.text.bold');
    }

    mark {
        background-color: theme('colors.bg.selection');
        color: theme('colors.text.selection');
    }

    /* 
        if you want an anchor tag to not have this style, 
        just add a class `unset` to it. 
    */
    a:not(.unset) {
        text-decoration: none;
        position: relative;
        color: theme('colors.text.link');
    }

    a:not(.unset)::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -0.1rem;
        width: 100%;
        height: 1px;
        background-color: theme('colors.text.link');
        transition: transform 0.2s ease;
        transform-origin: left;
        transform: scaleX(0);
    }

    a:not(.unset):hover::after,
    a:not(.unset):focus-visible::after {
        transform: scaleX(1);
    }

    code:not(pre code):not(.unset) {
        background-color: theme('colors.bg.code');
        color: theme('colors.text.code');
        padding: 0.1rem 0.35rem;
        border-radius: 0.25rem;
        font-size: 0.85em;
        font-weight: 600;
        border: 1px solid theme('colors.border.code');
        box-shadow: 2px 2px 0 rgb(var(--color-border-ink) / 0.15);
    }

    html.dark code:not(pre code) {
        background-color: rgb(var(--color-bg-code) / 0.15);
        border-color: rgb(var(--color-border-code) / 0.15);
    }

    ul:not(.unset):not(:where([class~="prose"] *)) {
        padding-left: 0;
        list-style: none;
    }

    ul:not(:where([class~="prose"] *))>li {
        position: relative;
        padding-left: 1.375rem;
    }

    ul:not(.unset):not(:where([class~="prose"] *))>li::before {
        position: absolute;
        left: 0;
        content: "Â»";
        color: rgb(var(--color-text-muted));
    }

    ol:not(.unset):not(:where([class~="prose"] *)) {
        padding-left: 1.125rem;
    }

    ol:not(.unset):not(:where([class~="prose"] *))>li::marker {
        color: rgb(var(--color-text-muted))
    }

    ul:not(.unset):not(:where([class~="prose"] *))>li,
    ol:not(.unset):not(:where([class~="prose"] *))>li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }

    ::selection {
        background: theme('colors.bg.selection');
        color: theme('colors.text.selection');
    }

    .pattern-background {
        position: fixed;
        inset: 0;
        pointer-events: none;
        z-index: -10;
        background:
            radial-gradient(circle at 1px 1px, rgba(31, 29, 25, 0.08) 1px, transparent 0) 0 0 / 18px 18px,
            radial-gradient(circle at 1px 1px, rgba(31, 29, 25, 0.06) 1px, transparent 0) 9px 9px / 18px 18px;
        opacity: 0.5;
    }

    html.dark .pattern-background {
        background:
            radial-gradient(circle at 1px 1px, rgba(248, 245, 232, 0.08) 1px, transparent 0) 0 0 / 18px 18px,
            radial-gradient(circle at 1px 1px, rgba(248, 245, 232, 0.05) 1px, transparent 0) 9px 9px / 18px 18px;
    }

    /* ------ GLOBAL STYLES - END ------ */

    /* ------ REUSABLE UTILS - START ------ */
    .animated-link {
        position: relative;
        box-decoration-break: clone;
        text-decoration: none;
    }

    .animated-link:hover:after {
        transform: translateZ(0) scale(1);
    }

    .animated-link:after {
        left: 0;
        right: 0;
        bottom: -3px;
        content: "";
        height: 2px;
        position: absolute;
        transform: translateZ(0) scaleX(0);
        transform-origin: left center;
        transition: all .150s ease-in-out;
        background-image: linear-gradient(to right, theme('colors.text.link'), theme('colors.text.link'));
    }

    .animated-link.show:after {
        transform: translateZ(0) scale(1);
    }

    /* ------ REUSABLE UTILS - END ------ */
}
